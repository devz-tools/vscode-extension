name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [22]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Type check
        run: pnpm run check-types
        
      - name: Lint code
        run: pnpm run lint
        
      - name: Build LSP
        run: pnpm run build:lsp
        
      - name: Build extension
        run: pnpm run package
        
      - name: Install test dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3 libatk-bridge2.0-0 libdrm2 libgtk-3-0 libgbm1
          
      - name: Run tests (Linux)
        if: runner.os == 'Linux'
        run: xvfb-run -a pnpm test
        
      - name: Run tests (Windows/macOS)
        if: runner.os != 'Linux'
        run: pnpm test
        
  package:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build LSP
        run: pnpm run build:lsp
        
      - name: Package extension
        run: |
          pnpm add -g @vscode/vsce
          vsce package
          
      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package-${{ github.sha }}
          path: "*.vsix"
          retention-days: 7